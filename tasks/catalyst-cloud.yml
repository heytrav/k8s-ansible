---
- name: Connect to Catalyst Cloud
  os_auth:
    cloud: "{{ cloud_name }}"

- name: Create keypair
  os_keypair:
    name: "{{ keypair_name }}"
    public_key: "{{ ssh_public_key }}"
    cloud: "{{ cloud_name }}"

- name: Create Network
  os_network:
    name: "{{ network_name }}"
    state: present
    cloud: "{{ cloud_name }}"

- name: Create subnet
  os_subnet:
    name: "{{ subnet_name }}"
    network_name: "{{ network_name }}"
    state: present
    cidr: "{{ subnet_cidr }}"
    allocation_pool_start: "{{ subnet_dhcp_start }}"
    allocation_pool_end: "{{ subnet_dhcp_end }}"
    ip_version: 4
    dns_nameservers: "{{ default_nameservers }}"
    cloud: "{{ cloud_name }}"


- name: Create router
  os_router:
    cloud: "{{ cloud_name }}"
    state: present
    name: "{{ router_name }}"
    network: "{{ public_net_name }}"
    interfaces:
      - "{{ subnet_name }}"

- name: Create security groups
  os_security_group:
    cloud: "{{ cloud_name }}"
    state: present
    name: "{{ item }}"
  with_items: "{{ security_group_names }}"

- name: Add rules for security group
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    state: present
    security_group: "{{ item.group }}"
    protocol: "{{ item.proto | default('tcp') }}"
    port_range_min: "{{ omit if item.port == 'any' else item.port }}"
    port_range_max: "{{ omit if item.port == 'any' else item.port_end | default(item.port) }}"
    remote_ip_prefix: "{{ item.remote_ip_prefix | default(omit) }}"
    remote_group: "{{ item.remote_group | default(omit) }}"
  with_items: "{{ security_groups }}"


- name: Create cluster instances
  os_server:
    cloud: "{{ cloud_name }}"
    state: present
    name: "{{ item }}"
    image: "{{ default_os_image }}"
    key_name: "{{ keypair_name  }}"
    flavor: "{{ default_flavor }}"
    config_drive: yes
    nics:
      - net-name: "{{ network_name }}"
    security_groups: "default,{{ hostvars[item].security_groups | map(attribute='group') | list | unique | join(',')}}"
    meta: 
      inventory_hostname: "{{ item }}"
      groups: "{{ prefix }},{{ hostvars[item].group_names | join(',') }}"
    userdata: |
      #cloud-config
      hostname: "{{ item }}"
      ssh_authorized_keys:
        - "{{ ssh_public_key }}"
        - github:heytrav
        - github:Kodiack
        - github:catalystfd
      write_files:
        - path: /var/lib/rancher/conf/cloud-config.yml
          permissions: "0644"
          owner: root
          content: |
            #cloud-config
            ssh_authorized_keys:
              - github:heytrav
              - github:Kodiack
              - github:catalystfd
            users:
              - name: rancher
                shell: /bin/bash
                lock_passwd: true
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_authorized_keys:
                  - github:heytrav
                  - github:Kodiack
                  - github:catalystfd
      dns_nameservers:
        - 8.8.8.8
        - 1.1.1.1
  with_items: "{{ host_set }}"

- name: Assign floating ips
  os_floating_ip:
    cloud: "{{ cloud_name }}"
    state: present
    reuse: yes
    wait: true
    server: "{{ item }}"
  register: floating_ip_info
  with_items:
    - "{{ host_set }}"

- name: Append floating ip to host info
  add_host:
    name: "{{ item.item }}"
    ansible_host: "{{ item.floating_ip.floating_ip_address }}"
    ansible_user: "{{ hostvars[item.item].ansible_user }}"
    fixed_ip: "{{ item.floating_ip.fixed_ip_address }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    ansible_python_interpreter: /usr/bin/python
  with_items: "{{ floating_ip_info.results }}"

- wait_for:
    host: "{{ hostvars[item].ansible_host }}"
    port: 22
  with_items: "{{ host_set }}"
