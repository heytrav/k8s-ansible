---
- name: Preflight to set up machine specific variables
  hosts: cluster
  gather_facts: false
  tasks:
    - debug:
        var: prefix | mandatory


- name: Provision manager in catalyst cloud
  hosts: localhost
  gather_facts: false
  vars:
    # optional suffix to namespace resources
    host_set: "{{ groups.manager |  unique | list }}"
    # change if required or override at runtime using --extra-vars

    security_groups: "{{ host_set | map('extract', hostvars, 'security_groups') | sum(start=[]) | unique | list }}"

    security_group_names: "{{ security_groups | map(attribute='group') | unique | list }}"
    ansible_python_interpreter: "/usr/bin/env python"
  tasks:
    - import_tasks: tasks/catalyst-cloud.yml


- name: Provision master machine in catalyst cloud
  hosts: localhost
  gather_facts: false
  tags:
    - master
  vars:
    # optional suffix to namespace resources
    host_set: "{{ groups.master |  unique | list }}"
    # change if required or override at runtime using --extra-vars

    security_groups: "{{ host_set | map('extract', hostvars, 'security_groups') | sum(start=[]) | unique | list }}"

    security_group_names: "{{ security_groups | map(attribute='group') | unique | list }}"
    ansible_python_interpreter: "/usr/bin/env python"
  tasks:
    - import_tasks: tasks/catalyst-cloud.yml

- name: Scrape master machine for node token
  hosts: master
  become: true
  gather_facts: false
  tasks:
    - name: Add public ip to /etc/hosts
      raw: echo "127.0.0.1 {{ inventory_hostname }}" >> /etc/hosts

    - name: Add public ip to /etc/hosts
      raw: hostname {{ inventory_hostname }}

    - name: Get contents of file
      raw: cat /var/lib/rancher/k3s/server/node-token
      register: node_token

- name: Provision worker machines in catalyst cloud
  hosts: localhost
  gather_facts: false
  tags:
    - worker
  vars:
    # optional suffix to namespace resources
    worker_token: "{{ hostvars[groups.master[0]].node_token.stdout_lines[0] }}"
    host_set: "{{ groups.worker |  unique | list }}"
    # change if required or override at runtime using --extra-vars

    security_groups: "{{ host_set | map('extract', hostvars, 'security_groups') | sum(start=[]) | unique | list }}"

    security_group_names: "{{ security_groups | map(attribute='group') | unique | list }}"
    ansible_python_interpreter: "/usr/bin/env python"
  tasks:
    - name: Output the node token
      debug:
        var: worker_token

    - name: Dump out the cloud config
      debug:
        var: cloud_config

    - import_tasks: tasks/catalyst-cloud.yml

- name: Set hostname on worker
  hosts: worker
  become: true
  gather_facts: false
  tasks: 
    - name: Add public ip to /etc/hosts
      raw: echo "127.0.0.1 {{ inventory_hostname }}" >> /etc/hosts

    - name: Add public ip to /etc/hosts
      raw: hostname {{ inventory_hostname }}


- name: Basic host setup
  hosts: cluster
  become: true
  gather_facts: false
  vars: 
    host_set: "{{ groups.cluster  }}"
  serial: 1
  tasks:
    - name: Remove floating ip from known hosts
      delegate_to: localhost
      known_hosts:
        name: "{{ ansible_host }}"
        state: absent

    - name: "Add {{ inventory_hostname }} to local ~/.ssh/config"
      delegate_to: localhost
      blockinfile:
        dest: "{{ lookup('env', 'HOME') }}/.ssh/config"
        insertbefore: BOF
        block: |
          Host {{ inventory_hostname }}
              User {{ ansible_user }}
              StrictHostKeyChecking no
          Host {{ ansible_host }}
              Hostname {{ inventory_hostname }}
              User {{ ansible_user }}
              StrictHostKeyChecking no
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ inventory_hostname }}"

    - name: "Add {{ inventory_hostname }} to /etc/hosts"
      delegate_to: localhost
      become: yes
      blockinfile:
        dest: /etc/hosts
        insertafter: EOF
        block: |
          {{ ansible_host }} {{ inventory_hostname }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ inventory_hostname }}"

- name: Basic host setup
  hosts: cluster
  become: true
  gather_facts: false
  tags:
    - remote-setup
  vars: 
    host_set: "{{ groups.cluster  }}"
  tasks:

    - name: Update apt cache
      raw: apt update -y

    - name: Install python
      raw: >
        which python || apt-get update -y && apt-get install -y python && echo 'installed'
      register: python
      changed_when: python.stdout == 'installed'

    - name: Add NZ locale to all instances
      locale_gen:
        name: en_NZ.UTF-8
        state: present

    - name: Add entry to /etc/hosts for all instance
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars[item].fixed_ip }} {{ item }}"
      with_items: "{{ host_set }}"



- name: Set up Docker on hosts
  hosts: cluster
  become: yes
  tags:
    - remote-setup
  roles: 
    - docker


- name: Add manager ip as fake DNS for voting app
  hosts: localhost
  become: yes
  tags:
    - remote-setup
  tasks:
    - name: Add manager IP to /etc/hosts
      blockinfile:
        dest: /etc/hosts
        insertafter: EOF
        block: |
          {{ hostvars[groups.worker[0]].ansible_host }} voting.appl
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR voting.app"

