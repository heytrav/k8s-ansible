
- name: Set up local environment for k8s workshop
  hosts: pristine
  vars:
    ssh_user: "{{ lookup('env', 'USER') }}"
    vault_password_path: "{{ lookup('env', 'HOME') }}/.ansible/kubernetes_workshop_vault_password"
  tasks:

    - pause:
        prompt: "Enter a vault password for project"
        echo: no
      register: project_vault_password_input


    - name: Replace train users bashrc with a custom version
      template:
        src: templates/train.bashrc.j2
        dest: "/home/{{ ssh_user }}/.bashrc"
        mode: 0644

    - name: Add ansible.cfg to user machine
      template:
        src: templates/ansible.cfg.j2
        dest: "{{ lookup('env', 'HOME') }}/.ansible.cfg"
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0644'

    - name: Create ansible directory in user home directory
      file:
        path: "{{ lookup('env', 'HOME') }}/.ansible/inventory"
        state: directory
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user  }}"

    - name: Add vault secret to file
      copy:
        dest: "{{ vault_password_path }}"
        content: "{{ project_vault_password_input.user_input }}"
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user  }}"
        mode: 0644

    - name: Add default hosts file for creating clusters
      template:
        src: templates/hosts.j2
        dest: "{{ lookup('env', 'HOME') }}/.ansible/inventory/cloud-hosts"
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0644'



- name: Set up catalyst cloud credentials
  hosts: training
  vars:
    ssh_user: "{{ lookup('env', 'USER') }}"
  roles:
    - role: cloud-config


- name: Install docker
  hosts: training
  become: yes
  roles:
    - docker
    - docker-compose
    - trainingpc-minikube

  pre_tasks: 

    - name: Bail out if not an ubuntu distribution
      when: ansible_distribution != "Ubuntu"
      fail:
        msg: "Sorry this only works on Ubuntu"

    - name: Apt dist upgrade
      apt:
        upgrade: dist
        autoremove: yes

    - name: Make sure old versions of docker are not installed
      apt:
        name:
          - docker
          - docker-engine
          - docker-io
        state: absent

  post_tasks:
    - name: Install useful libraries
      apt:
        name: jq
        state: present
