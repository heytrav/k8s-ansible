---

- name: Preflight removing gitlab-runner
  hosts: "{{ prefix }}"
  gather_facts: false
  serial: 1
  tasks:
    - name: Assign hostname to host
      add_host:
        ansible_user: "{{ hostvars[openstack.name].ansible_user }}"
        name: "{{ openstack.name }}"
        ansible_host: "{{ openstack.public_v4 | default(openstack.private_v4, true) }}"
        groups:
          - teardown
      when: 
        - openstack is defined
        - openstack.metadata.inventory_hostname is defined

- name: Teardown Catalyst Cloud hosts
  hosts: kube-local
  gather_facts: false
  vars:
    host_set: "{{ [ node | default(groups.teardown) ] | flatten | list }}"
    # change if required or override at runtime using --extra-vars

    security_groups: "{{ host_set | map('extract', hostvars, 'security_groups') | sum(start=[]) | unique | list }}"

    security_group_names: "{{ security_groups | map(attribute='group') | unique | list }}"
    ansible_python_interpreter: "/usr/bin/env python"

  tasks:
    - block:
    
        - name: Connect to Catalyst Cloud
          os_auth:
            cloud: "{{ cloud_name }}"

        - name: Remove floating ips from known_hosts
          known_hosts:
            name: "{{ item }}"
            state: absent
          with_items: "{{ host_set }}"

        - name: Disassociate floating ip
          os_floating_ip:
            floating_ip_address: "{{ hostvars[item].ansible_host }}"
            state: absent
            server: "{{ item }}"
          with_items: "{{ host_set }}"

        - name: Remove cluster servers
          os_server:
            cloud: "{{ cloud_name }}"
            name: "{{ item }}"
            state: absent
          with_items: "{{ host_set }}"
      tags: 
        - node_only

    - name: Remove ports
      os_port:
        cloud: "{{ cloud_name }}"
        name: "{{ item }}"
        state: absent
      with_items: "{{ host_set }}"

    - name: Remove cluster keypair
      os_keypair: 
        cloud: "{{ cloud_name }}"
        state: absent
        name: "{{ keypair_name }}"

    - name: Remove cluster router
      os_router:
        cloud: "{{ cloud_name }}"
        state: absent
        name: "{{ router_name }}"

    - name: Remove cluster network
      os_network:
        cloud: "{{ cloud_name }}"
        state: absent
        name: "{{ network_name }}"

    - name: Remove security group
      os_security_group:
        cloud: "{{ cloud_name }}"
        name: "{{ item }}"
        state: absent
      with_items: "{{ security_group_names }}"

    - block:
        - name: Remove hosts from local ~/.ssh/config
          blockinfile:
            dest: "{{  lookup('env', 'HOME')  }}/.ssh/config"
            state: absent
            marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
          with_items: "{{ host_set }}"

        - name: Remove host from /etc/hosts
          become: yes
          blockinfile:
            dest: /etc/hosts
            state: absent
            insertafter: EOF
            marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
          with_items: "{{ host_set }}"


        - name: Remove fake domain from /etc/hosts
          become: yes
          blockinfile:
            dest: /etc/hosts
            state: absent
            marker: "# {mark} ANSIBLE MANAGED BLOCK FOR voting.app"
      tags: 
        - select_nodes
